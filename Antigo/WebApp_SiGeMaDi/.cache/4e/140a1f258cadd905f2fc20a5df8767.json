{"id":"../node_modules/a_mock/partialMock/newExecute.js","dependencies":[{"name":"D:\\Francisco\\Documents\\Escola\\UNIVERSIDADE\\3_ANO\\6_Semestre\\Projeto e Seminário\\WebApp_SiGeMaDi\\package.json","includedInParent":true,"mtime":1587896205932},{"name":"D:\\Francisco\\Documents\\Escola\\UNIVERSIDADE\\3_ANO\\6_Semestre\\Projeto e Seminário\\WebApp_SiGeMaDi\\.babelrc","includedInParent":true,"mtime":1587234046021},{"name":"D:\\Francisco\\Documents\\Escola\\UNIVERSIDADE\\3_ANO\\6_Semestre\\Projeto e Seminário\\WebApp_SiGeMaDi\\node_modules\\a_mock\\package.json","includedInParent":true,"mtime":1586887921136},{"name":"./execute","loc":{"line":2,"column":25},"parent":"D:\\Francisco\\Documents\\Escola\\UNIVERSIDADE\\3_ANO\\6_Semestre\\Projeto e Seminário\\WebApp_SiGeMaDi\\node_modules\\a_mock\\partialMock\\newExecute.js","resolved":"D:\\Francisco\\Documents\\Escola\\UNIVERSIDADE\\3_ANO\\6_Semestre\\Projeto e Seminário\\WebApp_SiGeMaDi\\node_modules\\a_mock\\partialMock\\execute.js"}],"generated":{"js":"function newExecute(returnValue,hasCorrectArguments,mockContext,shouldDecrementExpectCount) {\t\n\tvar _execute  = require('./execute');\n\tvar _fallback = mockContext.originalFallback;\n\tvar whenCalledEmitter = mockContext.whenCalledEmitter;\n\n\tfunction execute() {\n\t\tvar args = [returnValue,_fallback,hasCorrectArguments,mockContext,shouldDecrementExpectCount,whenCalledEmitter];\n\t\tfor(var index = 0; index < arguments.length; index++) {\n\t\t\targs.push(arguments[index]);\n\t\t}\n\t\treturn _execute.apply(null,args);\n\t\treturnValue,fallback,hasCorrectArguments\n\t}\n\n\texecute.setFallback = function(fallback) {\n\t\t_fallback = fallback;\n\t};\n\n\treturn execute;\n}\n\nmodule.exports = newExecute;","map":{"mappings":[{"source":"../node_modules/a_mock/partialMock/newExecute.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/a_mock/partialMock/newExecute.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/a_mock/partialMock/newExecute.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/a_mock/partialMock/newExecute.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/a_mock/partialMock/newExecute.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/a_mock/partialMock/newExecute.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/a_mock/partialMock/newExecute.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/a_mock/partialMock/newExecute.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/a_mock/partialMock/newExecute.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/a_mock/partialMock/newExecute.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/a_mock/partialMock/newExecute.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/a_mock/partialMock/newExecute.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/a_mock/partialMock/newExecute.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/a_mock/partialMock/newExecute.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/a_mock/partialMock/newExecute.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/a_mock/partialMock/newExecute.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/a_mock/partialMock/newExecute.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/a_mock/partialMock/newExecute.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/a_mock/partialMock/newExecute.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/a_mock/partialMock/newExecute.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/a_mock/partialMock/newExecute.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/a_mock/partialMock/newExecute.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}}],"sources":{"../node_modules/a_mock/partialMock/newExecute.js":"function newExecute(returnValue,hasCorrectArguments,mockContext,shouldDecrementExpectCount) {\t\n\tvar _execute  = require('./execute');\n\tvar _fallback = mockContext.originalFallback;\n\tvar whenCalledEmitter = mockContext.whenCalledEmitter;\n\n\tfunction execute() {\n\t\tvar args = [returnValue,_fallback,hasCorrectArguments,mockContext,shouldDecrementExpectCount,whenCalledEmitter];\n\t\tfor(var index = 0; index < arguments.length; index++) {\n\t\t\targs.push(arguments[index]);\n\t\t}\n\t\treturn _execute.apply(null,args);\n\t\treturnValue,fallback,hasCorrectArguments\n\t}\n\n\texecute.setFallback = function(fallback) {\n\t\t_fallback = fallback;\n\t};\n\n\treturn execute;\n}\n\nmodule.exports = newExecute;"},"lineCount":22}},"hash":"fc7da8e1c5ede414a1d2357c39e9c4e1","cacheData":{"env":{}}}