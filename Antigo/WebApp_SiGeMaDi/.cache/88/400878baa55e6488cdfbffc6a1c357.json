{"id":"../node_modules/a/node_modules/a_test/dist/assert/trimStackTrace.js","dependencies":[{"name":"D:\\Francisco\\Documents\\Escola\\UNIVERSIDADE\\3_ANO\\6_Semestre\\Projeto e Seminário\\WebApp_SiGeMaDi\\node_modules\\a\\node_modules\\a_test\\dist\\assert\\trimStackTrace.js.map","includedInParent":true,"mtime":1502959764000},{"name":"D:\\Francisco\\Documents\\Escola\\UNIVERSIDADE\\3_ANO\\6_Semestre\\Projeto e Seminário\\WebApp_SiGeMaDi\\package.json","includedInParent":true,"mtime":1587896205932},{"name":"D:\\Francisco\\Documents\\Escola\\UNIVERSIDADE\\3_ANO\\6_Semestre\\Projeto e Seminário\\WebApp_SiGeMaDi\\.babelrc","includedInParent":true,"mtime":1587234046021},{"name":"D:\\Francisco\\Documents\\Escola\\UNIVERSIDADE\\3_ANO\\6_Semestre\\Projeto e Seminário\\WebApp_SiGeMaDi\\node_modules\\a\\node_modules\\a_test\\package.json","includedInParent":true,"mtime":1586887921414},{"name":"D:\\Francisco\\Documents\\Escola\\UNIVERSIDADE\\3_ANO\\6_Semestre\\Projeto e Seminário\\WebApp_SiGeMaDi\\node_modules\\a\\node_modules\\a_test\\.babelrc","includedInParent":true,"mtime":1502958245000}],"generated":{"js":"'use strict';\n\nmodule.exports = function (e) {\n\tvar stack = e.stack;\n\tvar index = stack.indexOf('at innerThrows (assert.js:');\n\tif (index < 0) index = stack.indexOf('at _throws (assert.js:');\n\n\twhile (stack[index] != '\\n') {\n\t\tindex--;\n\t}\n\n\treturn stack.substring(0, index);\n};\n","map":{"version":3,"sources":["../../src/assert/trimStackTrace.js"],"names":["module","exports","e","stack","index","indexOf","substring"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,UAASC,CAAT,EAAY;AAC5B,KAAIC,QAAQD,EAAEC,KAAd;AACA,KAAIC,QAAQD,MAAME,OAAN,CAAc,4BAAd,CAAZ;AACA,KAAID,QAAQ,CAAZ,EACCA,QAAQD,MAAME,OAAN,CAAc,wBAAd,CAAR;;AAED,QAAMF,MAAMC,KAAN,KAAgB,IAAtB,EAA2B;AAC1BA;AACA;;AAED,QAAOD,MAAMG,SAAN,CAAgB,CAAhB,EAAmBF,KAAnB,CAAP;AACA,CAXD","file":"trimStackTrace.js","sourcesContent":["module.exports = function(e) {\n\tvar stack = e.stack;\n\tvar index = stack.indexOf('at innerThrows (assert.js:');\n\tif (index < 0)\n\t\tindex = stack.indexOf('at _throws (assert.js:');\n\t\n\twhile(stack[index] != '\\n'){\n\t\tindex --;\n\t}\n\t\n\treturn stack.substring(0, index);\n}"]}},"hash":"29830d96af17a330493b075b2ff523b2","cacheData":{"env":{}}}